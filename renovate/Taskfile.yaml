---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"
includes:
  docker: "https://raw.githubusercontent.com/CowDogMoo/taskfile-templates/main/docker/Taskfile.yaml"

tasks:
  check-npx:
    desc: Validate that npx is installed (for Node.js tasks)
    cmds:
      - |
        if ! command -v npx &> /dev/null; then
          echo "'npx' command not found. Please install Node.js which includes npx: https://nodejs.org/en/download/"
          exit 1
        fi
    silent: true

  test-local:
    desc: Test Renovate configuration locally using Docker
    deps:
      - task: docker:check-docker
    vars:
      LOG_LEVEL: '{{.LOG_LEVEL | default "debug"}}'
      LOG_FILE: '{{.LOG_FILE | default "renovate-debug.log"}}'
    cmds:
      - |
        # Check if we're in a git repository
        if ! git rev-parse --git-dir > /dev/null 2>&1; then
          echo "Error: Not in a git repository"
          exit 1
        fi

        # Check for Renovate config file in standard locations
        CONFIG_FOUND=false
        for config_file in renovate.json renovate.json5 .github/renovate.json .github/renovate.json5 .gitlab/renovate.json .gitlab/renovate.json5 .renovaterc .renovaterc.json .renovaterc.json5; do
          if [ -f "$config_file" ]; then
            echo "‚úì Found Renovate config: $config_file"
            CONFIG_FOUND=true
            break
          fi
        done

        if [ "$CONFIG_FOUND" = false ]; then
          echo "Error: No Renovate configuration file found in standard locations:"
          echo "  - renovate.json, renovate.json5"
          echo "  - .github/renovate.json, .github/renovate.json5"
          echo "  - .gitlab/renovate.json, .gitlab/renovate.json5"
          echo "  - .renovaterc, .renovaterc.json, .renovaterc.json5"
          exit 1
        fi

        # Get GitHub token
        if [ -n "$GITHUB_TOKEN" ]; then
          TOKEN="$GITHUB_TOKEN"
        elif command -v gh >/dev/null 2>&1; then
          TOKEN=$(gh auth token)
        else
          echo "Error: No GitHub token found. Set GITHUB_TOKEN or install gh CLI"
          exit 1
        fi

        # Run Renovate locally
        docker run --rm -v "$(pwd)":/repo -w /repo \
          -e LOG_LEVEL={{.LOG_LEVEL}} \
          -e GITHUB_COM_TOKEN="$TOKEN" \
          renovate/renovate --platform=local 2>&1 | tee {{.LOG_FILE}}

        echo ""
        echo "‚úÖ Renovate test complete. Check {{.LOG_FILE}} for details."
        echo ""
        echo "üìä Quick Summary:"
        echo "  Dependencies found: $(grep -o '"depCount": [0-9]*' {{.LOG_FILE}} | tail -1 | cut -d' ' -f2)"
        echo "  Updates available: $(grep '"newVersion":' {{.LOG_FILE}} | wc -l | tr -d ' ')"
    silent: true

  lint:
    desc: Validate Renovate configuration using renovate-config-validator
    deps:
      - task: docker:check-docker
    vars:
      CONFIG_FILE: '{{.CONFIG_FILE | default ".github/renovate.json5"}}'
    cmds:
      - |
        echo "Validating Renovate configuration..."

        # Get absolute path of config file
        CONFIG_PATH="$(realpath "{{.CONFIG_FILE}}" 2>/dev/null || echo "{{.CONFIG_FILE}}")"

        # Check if config file exists
        if [ ! -f "$CONFIG_PATH" ]; then
          echo "Error: Renovate configuration file not found at {{.CONFIG_FILE}}"
          exit 1
        fi

        # Get directory and filename
        CONFIG_DIR="$(dirname "$CONFIG_PATH")"
        CONFIG_NAME="$(basename "$CONFIG_PATH")"

        echo "Validating: $CONFIG_PATH"

        # Run validator from the config file's directory
        cd "$CONFIG_DIR"
        docker run --rm -v "$(pwd)":/repo -w /repo \
          renovate/renovate \
          renovate-config-validator "$CONFIG_NAME"

        if [ $? -eq 0 ]; then
          echo "‚úÖ Renovate configuration is valid!"
        else
          echo "‚ùå Renovate configuration validation failed."
          exit 1
        fi
    silent: true
