---
version: "3"
tasks:
  changelog-lint:
    desc: "Lint the changelog"
    cmds:
      - antsibull-changelog lint

  changelog-release:
    desc: "Generate the changelog release"
    cmds:
      - antsibull-changelog release --version $NEXT_VERSION

  gen-changelog:
    desc: "Generate the changelog for the next release"
    cmds:
      - |
        if [ -z "$NEXT_VERSION" ]; then
          echo "'NEXT_VERSION' environment variable not set. Example: NEXT_VERSION=1.0.0"
          exit 1
        fi
      - echo "Generating changelog for release $NEXT_VERSION"
      - task: ansible:changelog-lint
      - task: ansible:changelog-release

  lint-ansible:
    desc: "Run Ansible Lint"
    cmds:
      - |
        echo "Running ansible-lint."
        ansible-lint --force-color -c .hooks/linters/ansible-lint.yaml
    silent: true

  run-molecule-action:
    desc: "Run GitHub Actions molecule workflow using act. Optionally specify ROLE or PLAYBOOK"
    vars:
      ROLE: '{{ .ROLE | default "" }}'
      PLAYBOOK: '{{ .PLAYBOOK | default "" }}'
      IS_MAC_ARM: '{{if and (eq OS "Darwin") (eq ARCH "arm64")}}true{{else}}false{{end}}'
      ARCH_FLAG: '{{if eq .IS_MAC_ARM "true"}}--container-architecture linux/amd64{{end}}'
      MATRIX_FILTER: |
        {{if .ROLE}}
          .jobs.role_test.strategy.matrix.include[] | select(.path == "roles/{{.ROLE}}")
        {{else if .PLAYBOOK}}
          .jobs.playbook_test.strategy.matrix.include[] | select(.path == "playbooks/{{.PLAYBOOK}}")
        {{end}}
    preconditions:
      - sh: |
          [ -z '{{.ROLE}}' ] || [ -d 'roles/{{.ROLE}}' ] || exit 1
        msg: "Role '{{.ROLE}}' not found in roles/"
      - sh: |
          [ -z '{{.PLAYBOOK}}' ] || [ -d 'playbooks/{{.PLAYBOOK}}' ] || exit 1
        msg: "Playbook '{{.PLAYBOOK}}' not found in playbooks/"
      - sh: "[ -z '{{.ROLE}}' ] || [ -z '{{.PLAYBOOK}}' ]"
        msg: "Specify either ROLE or PLAYBOOK, not both"
      - sh: |
          if [ "{{.IS_MAC_ARM}}" = "true" ]; then
            echo "âš  Running on Apple M-series chip. Using linux/amd64 architecture for compatibility."
          fi
        msg: ""
    cmds:
      - |
        # Clean up any existing act containers
        docker rm -f $(docker ps -q -f name=act-Molecule-Test) 2>/dev/null || true
        if [ -n "{{.ROLE}}" ] || [ -n "{{.PLAYBOOK}}" ]; then
          FILTER='{{.MATRIX_FILTER}}'
          act -W .github/workflows/molecule.yaml {{.ARCH_FLAG}} --matrix "$(yq eval -o=json .github/workflows/molecule.yaml | jq -c "[$FILTER]")"
        else
          act -W .github/workflows/molecule.yaml {{.ARCH_FLAG}}
        fi
    silent: true

  run-molecule-tests:
    desc: "Run Molecule tests for all roles"
    cmds:
      - |
        mkdir -p logs
        export ANSIBLE_CONFIG=$(pwd)/ansible.cfg
        for role in roles/*; do
          if [[ -d "$role" ]]; then
            echo "Running molecule tests for role $role"
            (cd "$role" && molecule test) | tee -a logs/molecule_tests.log || exit 1
          fi
        done
    silent: true
